@model BusinessObjects.Item

@{
	ViewBag.Title = "AddItem";
}

@using (Html.BeginForm("AddItem", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

<div class="form-horizontal" style="width:60%">
	<h1>Sukurte naują prekę</h1> <hr />

	<div class="form-group">
		@Html.LabelFor(model => model.SKUCode, htmlAttributes: new { @class = "col-md-3" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.SKUCode, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.SKUCode, "", new { @class = "text-danger" })
		</div>
	</div>

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-3" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-3" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-md-3" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-3" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>


	<div class="form-group" id="fromUrl">
		@Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-md-3" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
		</div>
	</div>


	<div class="form-group">
		<br />
		@Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "col-md-3" })

		<div style="color:black;" class="col-md-10">
			@Html.DropDownList("CategoryId", null, "Prekė neturi Kategorijos", htmlAttributes: new { @class = "form-control", @onchange = "onChange()" })
			@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div id="ItemProperties">
			@Html.Partial("_ItemProperties", Model.ItemProperties, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "ItemProperties" } })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-8">
			<input type="submit" value="Sukurti prekę" class="btn btn-success" />
			<button type="button" class="btn btn-dark" onclick="location.href = '@Url.Action("ModifyItems", "Admin")'">Grįžti į prekių valdymo langą</button>
		</div>
	</div>

</div>
}

@section Scripts {
	
	<script type="text/javascript">
    function onChange() {
        var url = '@Url.Action("ItemProperties", "Admin")';

        $.ajax({
            type: "POST",
            url: url,
            data: $('#CategoryId').serialize(),
            cache: false,
            dataType: 'html',
            success: function (response) {
                $("#ItemProperties").html(response);
                console.log(response)
            }
        });
    }
	</script>
}

